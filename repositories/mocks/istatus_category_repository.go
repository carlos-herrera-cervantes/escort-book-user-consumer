// Code generated by MockGen. DO NOT EDIT.
// Source: escort-book-user-consumer/repositories (interfaces: IStatusCategoryRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "escort-book-user-consumer/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIStatusCategoryRepository is a mock of IStatusCategoryRepository interface.
type MockIStatusCategoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIStatusCategoryRepositoryMockRecorder
}

// MockIStatusCategoryRepositoryMockRecorder is the mock recorder for MockIStatusCategoryRepository.
type MockIStatusCategoryRepositoryMockRecorder struct {
	mock *MockIStatusCategoryRepository
}

// NewMockIStatusCategoryRepository creates a new mock instance.
func NewMockIStatusCategoryRepository(ctrl *gomock.Controller) *MockIStatusCategoryRepository {
	mock := &MockIStatusCategoryRepository{ctrl: ctrl}
	mock.recorder = &MockIStatusCategoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStatusCategoryRepository) EXPECT() *MockIStatusCategoryRepositoryMockRecorder {
	return m.recorder
}

// GetByField mocks base method.
func (m *MockIStatusCategoryRepository) GetByField(arg0 context.Context, arg1, arg2 string) (models.StatusCategory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByField", arg0, arg1, arg2)
	ret0, _ := ret[0].(models.StatusCategory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByField indicates an expected call of GetByField.
func (mr *MockIStatusCategoryRepositoryMockRecorder) GetByField(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByField", reflect.TypeOf((*MockIStatusCategoryRepository)(nil).GetByField), arg0, arg1, arg2)
}
